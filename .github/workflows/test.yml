name: Run Tests

on:
  push:
    branches: [develop, staging, main]
  pull_request:
    branches: [develop, staging, main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [24.x]

    services:
      postgres:
        image: postgres:13.18-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7.0.7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: PNPM cache
        id: cache-pnpm
        uses: actions/cache@v4
        env:
          cache-name: cache-pnpm
        with:
          path: |
            node_modules
            ~/.pnpm
          key: ${{ runner.os }}-test-${{ env.cache-name }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: NX cache
        id: cache-nx
        uses: actions/cache@v4
        env:
          cache-name: cache-nx
        with:
          path: |
            .nx
          key: ${{ runner.os }}-test-${{ env.cache-name }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install Dependencies
        if: steps.cache-pnpm.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Run Tests
        run: pnpm nx run-many -t test
