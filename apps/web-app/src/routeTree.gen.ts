/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StakeRouteImport } from './routes/stake'
import { Route as MoneyMarketRouteImport } from './routes/money-market'
import { Route as LendRouteImport } from './routes/lend'
import { Route as ConvertRouteImport } from './routes/convert'
import { Route as ComponentsRouteImport } from './routes/components'
import { Route as BorrowRouteImport } from './routes/borrow'
import { Route as IndexRouteImport } from './routes/index'
import { Route as I18nIndexRouteImport } from './routes/i18n/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'

const StakeRoute = StakeRouteImport.update({
  id: '/stake',
  path: '/stake',
  getParentRoute: () => rootRouteImport,
} as any)
const MoneyMarketRoute = MoneyMarketRouteImport.update({
  id: '/money-market',
  path: '/money-market',
  getParentRoute: () => rootRouteImport,
} as any)
const LendRoute = LendRouteImport.update({
  id: '/lend',
  path: '/lend',
  getParentRoute: () => rootRouteImport,
} as any)
const ConvertRoute = ConvertRouteImport.update({
  id: '/convert',
  path: '/convert',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsRoute = ComponentsRouteImport.update({
  id: '/components',
  path: '/components',
  getParentRoute: () => rootRouteImport,
} as any)
const BorrowRoute = BorrowRouteImport.update({
  id: '/borrow',
  path: '/borrow',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const I18nIndexRoute = I18nIndexRouteImport.update({
  id: '/i18n/',
  path: '/i18n/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/borrow': typeof BorrowRoute
  '/components': typeof ComponentsRoute
  '/convert': typeof ConvertRoute
  '/lend': typeof LendRoute
  '/money-market': typeof MoneyMarketRoute
  '/stake': typeof StakeRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/i18n': typeof I18nIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/borrow': typeof BorrowRoute
  '/components': typeof ComponentsRoute
  '/convert': typeof ConvertRoute
  '/lend': typeof LendRoute
  '/money-market': typeof MoneyMarketRoute
  '/stake': typeof StakeRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/i18n': typeof I18nIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/borrow': typeof BorrowRoute
  '/components': typeof ComponentsRoute
  '/convert': typeof ConvertRoute
  '/lend': typeof LendRoute
  '/money-market': typeof MoneyMarketRoute
  '/stake': typeof StakeRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/i18n/': typeof I18nIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/borrow'
    | '/components'
    | '/convert'
    | '/lend'
    | '/money-market'
    | '/stake'
    | '/demo/tanstack-query'
    | '/i18n'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/borrow'
    | '/components'
    | '/convert'
    | '/lend'
    | '/money-market'
    | '/stake'
    | '/demo/tanstack-query'
    | '/i18n'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/'
    | '/borrow'
    | '/components'
    | '/convert'
    | '/lend'
    | '/money-market'
    | '/stake'
    | '/demo/tanstack-query'
    | '/i18n/'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BorrowRoute: typeof BorrowRoute
  ComponentsRoute: typeof ComponentsRoute
  ConvertRoute: typeof ConvertRoute
  LendRoute: typeof LendRoute
  MoneyMarketRoute: typeof MoneyMarketRoute
  StakeRoute: typeof StakeRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  I18nIndexRoute: typeof I18nIndexRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/stake': {
      id: '/stake'
      path: '/stake'
      fullPath: '/stake'
      preLoaderRoute: typeof StakeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/money-market': {
      id: '/money-market'
      path: '/money-market'
      fullPath: '/money-market'
      preLoaderRoute: typeof MoneyMarketRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lend': {
      id: '/lend'
      path: '/lend'
      fullPath: '/lend'
      preLoaderRoute: typeof LendRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/convert': {
      id: '/convert'
      path: '/convert'
      fullPath: '/convert'
      preLoaderRoute: typeof ConvertRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components': {
      id: '/components'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/borrow': {
      id: '/borrow'
      path: '/borrow'
      fullPath: '/borrow'
      preLoaderRoute: typeof BorrowRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/i18n/': {
      id: '/i18n/'
      path: '/i18n'
      fullPath: '/i18n'
      preLoaderRoute: typeof I18nIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BorrowRoute: BorrowRoute,
  ComponentsRoute: ComponentsRoute,
  ConvertRoute: ConvertRoute,
  LendRoute: LendRoute,
  MoneyMarketRoute: MoneyMarketRoute,
  StakeRoute: StakeRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  I18nIndexRoute: I18nIndexRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
